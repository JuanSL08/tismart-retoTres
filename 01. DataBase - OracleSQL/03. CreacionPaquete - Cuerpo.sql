CREATE OR REPLACE PACKAGE BODY PKG_CRUD_HOSPITAL AS
-- PROCEDIMIENTO: PARA INSERCION DE HOSPITALES
    PROCEDURE INSERT_HOSPITAL(P_NOMBRE IN HOSPITAL.NOMBRE%TYPE, 
                                        P_ANTIGUEDAD IN HOSPITAL.ANTIGUEDAD%TYPE,
                                        P_AREA IN HOSPITAL.AREA%TYPE,
                                        P_FECHAREGISTRO IN HOSPITAL.FECHAREGISTRO%TYPE,
                                        P_IDDISTRITO IN HOSPITAL.IDDISTRITO%TYPE,
                                        P_IDSEDE IN HOSPITAL.IDSEDE%TYPE,
                                        P_IDGERENTE IN HOSPITAL.IDGERENTE%TYPE,
                                        P_IDCONDICION IN HOSPITAL.IDCONDICION%TYPE,
                                        P_MENSAJE OUT VARCHAR2) IS
    V_NEXT_IDHOSPITAL HOSPITAL.IDHOSPITAL%TYPE;
    BEGIN
        SELECT MAX(H.IDHOSPITAL)+1
        INTO V_NEXT_IDHOSPITAL
        FROM HOSPITAL H;
        
        INSERT INTO HOSPITAL(IDHOSPITAL, NOMBRE, ANTIGUEDAD, AREA, FECHAREGISTRO, IDDISTRITO,
                            IDSEDE, IDGERENTE, IDCONDICION)
        VALUES(V_NEXT_IDHOSPITAL, P_NOMBRE, P_ANTIGUEDAD, P_AREA, P_FECHAREGISTRO, P_IDDISTRITO,
                P_IDSEDE, P_IDGERENTE, P_IDCONDICION);
                
        P_MENSAJE := '-> Hospital Agregado';
    END INSERT_HOSPITAL;
-- PROCEDIMIENTO: PARA ELIMINACION DE HOSPITALES

    PROCEDURE DELETE_HOSPITAL(P_IDHOSPITAL IN HOSPITAL.IDHOSPITAL%TYPE,
                                            P_MENSAJE OUT VARCHAR2) IS
    BEGIN
        DELETE FROM HOSPITAL H WHERE H.IDHOSPITAL = P_IDHOSPITAL;
        
        P_MENSAJE := '-> Hospital Eliminado';
    END DELETE_HOSPITAL;
    
-- PROCEDIMIENTO: PARA ACTUALIZACION DE HOSPITALES
    PROCEDURE UPDATE_HOSPITAL(P_IDHOSPITAL IN HOSPITAL.IDHOSPITAL%TYPE,
                                        P_NOMBRE IN HOSPITAL.NOMBRE%TYPE, 
                                        P_ANTIGUEDAD IN HOSPITAL.ANTIGUEDAD%TYPE,
                                        P_AREA IN HOSPITAL.AREA%TYPE,
                                        P_FECHAREGISTRO IN HOSPITAL.FECHAREGISTRO%TYPE,
                                        P_IDDISTRITO IN HOSPITAL.IDDISTRITO%TYPE,
                                        P_IDSEDE IN HOSPITAL.IDSEDE%TYPE,
                                        P_IDGERENTE IN HOSPITAL.IDGERENTE%TYPE,
                                        P_IDCONDICION IN HOSPITAL.IDCONDICION%TYPE,
                                        P_MENSAJE OUT VARCHAR2) IS
    BEGIN
        UPDATE HOSPITAL H SET H.NOMBRE = P_NOMBRE,
                                H.ANTIGUEDAD = P_ANTIGUEDAD,
                                H.AREA = P_AREA,
                                H.FECHAREGISTRO = P_FECHAREGISTRO,
                                H.IDDISTRITO = P_IDDISTRITO,
                                H.IDSEDE = P_IDSEDE,
                                H.IDGERENTE = P_IDGERENTE,
                                H.IDCONDICION = P_IDCONDICION
                WHERE H.IDHOSPITAL = P_IDHOSPITAL;
                
        P_MENSAJE := '-> Hospital Actualizado';
    END UPDATE_HOSPITAL;
    
-- PROCEDIMIENTO: PARA BUSCAR UN HOSPITAL
    PROCEDURE HOSPITAL_FIND_BY_ID(P_IDHOSPITAL IN HOSPITAL.IDHOSPITAL%TYPE,
                                        P_CURSOR_HOSPITAL OUT SYS_REFCURSOR) IS
    BEGIN
        OPEN P_CURSOR_HOSPITAL for
            SELECT H.*
            FROM HOSPITAL H
            WHERE H.IDHOSPITAL = P_IDHOSPITAL;
    END HOSPITAL_FIND_BY_ID;

-- PROCEDIMIENTO: PARA BUSCAR TODOS LOS HOSPITALES
    PROCEDURE HOSPITAL_FIND_ALL(P_CURSOR_HOSPITALES OUT SYS_REFCURSOR) IS
    BEGIN
        OPEN P_CURSOR_HOSPITALES for
            SELECT H.*
            FROM HOSPITAL H
            ORDER BY H.IDHOSPITAL;
    END HOSPITAL_FIND_ALL;
    
-- PROCEDIMIENTO: PARA BUSCAR UN HOSPITAL POR NOMBRE
    PROCEDURE HOSPITAL_FIND_BY_NOMBRE(P_NOMBRE IN HOSPITAL.NOMBRE%TYPE,
                                    P_CURSOR_HOSPITALES_NOMBRE OUT SYS_REFCURSOR) IS
    V_NOMBRE_COINCIDENCIA VARCHAR2(50) := '%'||LOWER(P_NOMBRE)||'%';
    BEGIN
        OPEN P_CURSOR_HOSPITALES_NOMBRE for
            SELECT H.*
            FROM HOSPITAL H
            WHERE LOWER(H.NOMBRE) LIKE V_NOMBRE_COINCIDENCIA
            ORDER BY H.IDHOSPITAL;
    END HOSPITAL_FIND_BY_NOMBRE;
    
-- PROCEDIMIENTO: PARA BUSCAR UN HOSPITAL POR SEDE
    PROCEDURE HOSPITAL_FIND_BY_SEDE(P_IDSEDE IN HOSPITAL.IDSEDE%TYPE,
                                    P_CURSOR_HOSPITALES_SEDE OUT SYS_REFCURSOR) IS
    BEGIN
        OPEN P_CURSOR_HOSPITALES_SEDE for
            SELECT H.*
            FROM HOSPITAL H
            WHERE H.IDSEDE = P_IDSEDE
            ORDER BY H.IDHOSPITAL;
    END HOSPITAL_FIND_BY_SEDE;
END PKG_CRUD_HOSPITAL;